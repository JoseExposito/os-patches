#!/bin/bash

# checks if any imports should be performed and performs them
# accepts package names as command-line parameters
# if none given, downloads the lists from a bzr branch
# Defaunt branch is lp:ubuntu-package-imports/elementary-import-list-distroversion
# export LISTS_BRANCH variable from your shell to override it

# export something different from your shell to override these values
export bzr_branch_prefix=${bzr_branch_prefix:-'lp:~elementary-os/ubuntu-package-imports/'}
export distro_version=${distro_version:-$(lsb_release -cs)}

if (echo "$1" | grep no-apt-update); then
    no_apt_update=true
    shift
fi

if [ -z "$@" ]; then
    LISTS_BRANCH=${LISTS_BRANCH:-"lp:ubuntu-package-imports/elementary-import-list-$distro_version"}
    target_folder=$(echo "$LISTS_BRANCH" | rev | cut -d '/' -f 1 | rev )
    echo "No packages specificed on command line.
Using package list from $LISTS_BRANCH" > /dev/stderr 
    rm -r "$target_folder"
    bzr ckeckout --lightweight "$LISTS_BRANCH"
    package_list="$(cat $target_folder/packages_to_import)"
else
    package_list="$@"
fi

# don't let l10n interfere with our grepping
export LC_ALL=C

# check if any source repos are enabled
if ! grep -E --silent '^ *deb-src' /etc/apt/sources.list /etc/apt/sources.list.d/*; then
echo "You don't have any source code repositories enabled.
Please enable them via software-center or by uncommenting lines starting with
'deb-src' in sources.list and sources.list.d/" > /dev/stderr 
exit 1
fi

# update info about available packages, unless --no-apt-update is given
# try to use aptdcon which doesn't propmt for sudo password and fall back to apt
if ! [ "$no_apt_update" = true ]; then
aptdcon --refresh ||  apt-get update || echo "Failed to update package version information.
Continuing anyway, but imported packages may be outdated."
fi

get_latest_package_version() {
package="$1"
apt-cache policy "$package" \
 | grep 'Candidate' \
 | sed --regexp-extended 's/^.*Candidate: //'
}

package_version_already_imported() {
package="$1"
version="$2"
rm -r "$package-$distro_version"
bzr ckeckout --lightweight "$bzr_branch_prefix""$package-$distro_version" &&
grep --silent "$version" "$package-$distro_version"/debian/changelog
}

# main cycle
for package in $package_list; do
    latest_version="$(get_latest_package_version $package)"
    if ! package_version_already_imported "$package" "$latest_version" ; then
        rm -r "$package"*
        apt-get source "$package" || {
            echo "Failed to download source code package $package" > /dev/stderr 
            exit 1
}

        cd "$package"-* || { 
            echo "Failed to cd to the downloaded source code directory.
Most likely this is a bug in the script.
Please report this failure at:
https://bugs.launchpad.net/ubuntu-package-imports/+filebug" > /dev/stderr
            exit 1
}

        if bzr ckeckout --lightweight "$bzr_branch_prefix""$package-$distro_version" ../"$package-$distro_version"; then
            # checkout succeeded
            cp -r ../"$package-$distro_version"/.bzr .bzr
            bzr add
            debcommit || {
                echo "Failed to commit the changes or upload the code to the bazaar branch.
Either your internet connection suddently went out, or it's caused by a bug.
If your internet connection works, please report this failure at:
https://bugs.launchpad.net/ubuntu-package-imports/+filebug" > /dev/stderr
                exit 1
        else
            # checkout failed; assuming the branch doesn't exist, which means
            # this is the first import of this package
            bzr init
            bzr add
            bzr commit -m "Initial import, version $latest_version"
            bzr push "$bzr_branch_prefix""$package-$distro_version" || {
                echo "Failed to upload the code to the bazaar branch.
Either your internet connection suddently went out, or it's caused by a bug.
If your internet connection works, please report this failure at:
https://bugs.launchpad.net/ubuntu-package-imports/+filebug" > /dev/stderr
                exit 1
}
        fi
    fi
done

exit 0